PROJECT := caffe

USE_CUDNN := 1

BUILD_DIR := build
BUILD_INCLUDE_DIR := $(BUILD_DIR)/src
CUDA_DIR := /usr/local/cuda

LIBRARY_NAME := $(PROJECT)
LIB_BUILD_DIR := $(BUILD_DIR)/lib
DYNAMIC_VERSION_MAJOR       := 1
DYNAMIC_VERSION_MINOR       := 0
DYNAMIC_VERSION_REVISION    := 0-rc3
DYNAMIC_NAME_SHORT := lib$(LIBRARY_NAME).so
DYNAMIC_VERSIONED_NAME_SHORT := $(DYNAMIC_NAME_SHORT).$(DYNAMIC_VERSION_MAJOR).$(DYNAMIC_VERSION_MINOR).$(DYNAMIC_VERSION_REVISION)
DYNAMIC_NAME := $(LIB_BUILD_DIR)/$(DYNAMIC_VERSIONED_NAME_SHORT)


# CXX_SRCS are the source files excluding the test ones.
CXX_SRCS := $(shell find src/$(PROJECT) ! -name "test_*.cpp" -name "*.cpp")
# CU_SRCS are the cuda source files
CU_SRCS := $(shell find src/$(PROJECT) ! -name "test_*.cu" -name "*.cu")
# PROTO_SRCS are the protocol buffer definitions
PROTO_SRC_DIR := src/$(PROJECT)/proto
PROTO_SRCS := $(wildcard $(PROTO_SRC_DIR)/*.proto)
PROTO_BUILD_DIR := $(BUILD_DIR)/$(PROTO_SRC_DIR)
PROTO_BUILD_INCLUDE_DIR := $(BUILD_INCLUDE_DIR)/$(PROJECT)/proto
PROTO_GEN_HEADER := $(addprefix $(PROTO_BUILD_INCLUDE_DIR)/, $(notdir ${PROTO_SRCS:.proto=.pb.h}))
PROTO_GEN_CC := $(addprefix $(BUILD_DIR)/, ${PROTO_SRCS:.proto=.pb.cc})

# The objects corresponding to the source files
# These objects will be linked into the final shared library, so we
# exclude the tool, example, and test objects.
CXX_OBJS := $(addprefix $(BUILD_DIR)/, ${CXX_SRCS:.cpp=.o})
CU_OBJS := $(addprefix $(BUILD_DIR)/cuda/, ${CU_SRCS:.cu=.o})
PROTO_OBJS := ${PROTO_GEN_CC:.cc=.o}
OBJS := $(PROTO_OBJS) $(CXX_OBJS) $(CU_OBJS)


# Complete build flags.
THIRDPARTY_DIR=$(PROJECT_DIR)/3rdparty
INCLUDE_DIRS += $(BUILD_INCLUDE_DIR) src include $(THIRDPARTY_DIR)
CUDA_INCLUDE_DIR := $(CUDA_DIR)/include
INCLUDE_DIRS += $(CUDA_INCLUDE_DIR)
INCLUDE_DIRS += ${CNMEM_DIR}/include
COMMON_FLAGS += $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir))
COMMON_FLAGS += -DUSE_CUDNN
COMMON_FLAGS += -DUSE_OPENCV
WARNINGS := -Wall -Wno-sign-compare
WARNINGS += -Wno-uninitialized
LINKFLAGS += -pthread -fPIC $(COMMON_FLAGS) $(WARNINGS)

CUDA_LIB_DIR += $(CUDA_DIR)/lib
LIBRARY_DIRS += $(CUDA_LIB_DIR)
LIB_BUILD_DIR := $(BUILD_DIR)/lib
LIBRARY_DIRS += $(LIB_BUILD_DIR)
LIBRARIES := cudart cublas curand
LIBRARIES += glog gflags protobuf boost_system m hdf5_hl hdf5
LIBRARIES += opencv_core opencv_highgui opencv_imgproc
LIBRARIES += boost_thread stdc++
LIBRARIES += cudnn
LIBRARIES += cblas atlas
LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(PKG_CONFIG) \
            $(foreach library,$(LIBRARIES),-l$(library))

NVCCFLAGS += -ccbin=g++ -Xcompiler -fPIC $(COMMON_FLAGS)



FP16_CONVERSION := build/cuda/src/caffe/util/fp16_conversion.o
FLOAT16 := build/src/caffe/util/float16.o
COMMON := build/src/caffe/common.o
MATH_FUNCTIONS := build/src/caffe/util/math_functions.o
CXX_IM2COL := build/src/caffe/util/im2col.o
CU_IM2COL := build/cuda/src/caffe/util/im2col.o
BLOB := build/src/caffe/blob.o
LAYER := build/src/caffe/layer.o
BASE_CONV_LAYER := build/src/caffe/layers/base_conv_layer.o
CXX_CONV_LAYER := build/src/caffe/layers/conv_layer.o
CU_CONV_LAYER := build/cuda/src/caffe/layers/conv_layer.o
CXX_CUDNN_CONV_LAYER := build/src/caffe/layers/cudnn_conv_layer.o
CU_CUDNN_CONV_LAYER := build/cuda/src/caffe/layers/cudnn_conv_layer.o
CXX_INNER_PRODUCT_LAYER := build/src/caffe/layers/inner_product_layer.o
CU_INNER_PRODUCT_LAYER := build/cuda/src/caffe/layers/inner_product_layer.o
CXX_POOLING_LAYER := build/src/caffe/layers/pooling_layer.o
CU_POOLING_LAYER := build/cuda/src/caffe/layers/pooling_layer.o

all: proto $(DYNAMIC_NAME)

proto: $(PROTO_GEN_CC) $(PROTO_GEN_HEADER) $(PROTO_OBJS)

$(PROTO_BUILD_DIR)/%.pb.cc $(PROTO_BUILD_DIR)/%.pb.h : $(PROTO_SRC_DIR)/%.proto | $(PROTO_BUILD_DIR)
	@ echo PROTOC $<
	@ protoc --proto_path=$(PROTO_SRC_DIR) --cpp_out=$(PROTO_BUILD_DIR) $<

$(PROTO_OBJS): $(PROTO_GEN_CC)
	@ echo CXX $<
	@ g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@

$(FP16_CONVERSION): src/caffe/util/fp16_conversion.cu
	@ echo NVCC $<
	@ $(CUDA_DIR)/bin/nvcc $(NVCCFLAGS) $(CUDA_ARCH) -c $< -o $@

$(FLOAT16): src/caffe/util/float16.cpp
	@ echo CXX $<
	@ g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@

$(COMMON): src/caffe/common.cpp
	@ echo CXX $<
	@ g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@

$(MATH_FUNCTIONS): src/caffe/util/math_functions.cpp
	@ echo CXX $<
	@ g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@

$(CXX_IM2COL): src/caffe/util/im2col.cpp
	@ echo CXX $<
	@ g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@

$(CU_IM2COL): src/caffe/util/im2col.cu
	@ echo NVCC $<
	@ $(CUDA_DIR)/bin/nvcc $(NVCCFLAGS) $(CUDA_ARCH) -c $< -o $@

$(BLOB): src/caffe/blob.cpp
	@ echo CXX $<
	@ g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@

$(LAYER): src/caffe/layer.cpp
	@ echo CXX $<
	@ g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@

$(BASE_CONV_LAYER): src/caffe/layers/base_conv_layer.cpp
	@ echo CXX $<
	@ g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@

$(CXX_CONV_LAYER): src/caffe/layers/conv_layer.cpp
	@ echo CXX $<
	@ g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@

$(CU_CONV_LAYER): src/caffe/layers/conv_layer.cu
	@ echo NVCC $<
	@ $(CUDA_DIR)/bin/nvcc $(NVCCFLAGS) $(CUDA_ARCH) -c $< -o $@

$(CXX_CUDNN_CONV_LAYER): src/caffe/layers/cudnn_conv_layer.cpp
	@ echo CXX $<
	@ g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@

$(CU_CUDNN_CONV_LAYER): src/caffe/layers/cudnn_conv_layer.cu
	@ echo NVCC $<
	@ $(CUDA_DIR)/bin/nvcc $(NVCCFLAGS) $(CUDA_ARCH) -c $< -o $@

$(CXX_INNER_PRODUCT_LAYER): src/caffe/layers/inner_product_layer.cpp
	@ echo CXX $<
	@ g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@

$(CU_INNER_PRODUCT_LAYER): src/caffe/layers/inner_product_layer.cu
	@ echo NVCC $<
	@ $(CUDA_DIR)/bin/nvcc $(NVCCFLAGS) $(CUDA_ARCH) -c $< -o $@

$(CXX_POOLING_LAYER): src/caffe/layers/pooling_layer.cpp
	@ echo CXX $<
	@ g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@

$(CU_POOLING_LAYER): src/caffe/layers/pooling_layer.cu
	@ echo NVCC $<
	@ $(CUDA_DIR)/bin/nvcc $(NVCCFLAGS) $(CUDA_ARCH) -c $< -o $@

$(DYNAMIC_NAME): $(OBJS) | $(LIB_BUILD_DIR)
	@ echo LD -o $@
	@ g++ -shared -o $@ $(OBJS) $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS)
	@ cd $(BUILD_DIR)/lib; rm -f $(DYNAMIC_NAME_SHORT); ln -s $(DYNAMIC_VERSIONED_NAME_SHORT) $(DYNAMIC_NAME_SHORT)

clean:
	rm $(PROTO_OBJS) $(FP16_CONVERSION) $(MATH_FUNCTIONS) $(CXX_IM2COL) $(CU_IM2COL) $(FLOAT16) $(COMMON) $(BLOB) $(LAYER) $(BASE_CONV_LAYER) $(CXX_CONV_LAYER) $(CU_CONV_LAYER) $(CXX_CUDNN_CONV_LAYER) $(CU_CUDNN_CONV_LAYER) $(CXX_INNER_PRODUCT_LAYER) $(CU_INNER_PRODUCT_LAYER)
