LD_DIR := build
CUDA_DIR := /usr/local/cuda

BUILD_INCLUDE_DIR := $(BUILD_DIR)/src
THIRDPARTY_DIR=$(PROJECT_DIR)/3rdparty
INCLUDE_DIRS += $(BUILD_INCLUDE_DIR) src include $(THIRDPARTY_DIR)
CUDA_INCLUDE_DIR := $(CUDA_DIR)/include
INCLUDE_DIRS += $(CUDA_INCLUDE_DIR)
INCLUDE_DIRS += ${CNMEM_DIR}/include
COMMON_FLAGS += $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir))
COMMON_FLAGS += -DUSE_CUDNN
COMMON_FLAGS += -DUSE_OPENCV
WARNINGS := -Wall -Wno-sign-compare
WARNINGS += -Wno-uninitialized
LINKFLAGS += -pthread -fPIC $(COMMON_FLAGS) $(WARNINGS)

CUDA_LIB_DIR += $(CUDA_DIR)/lib
LIBRARY_DIRS += $(CUDA_LIB_DIR)
LIB_BUILD_DIR := $(BUILD_DIR)/lib
LIBRARY_DIRS += $(LIB_BUILD_DIR)
LIBRARIES := cudart cublas curand
LIBRARIES += glog gflags protobuf boost_system m hdf5_hl hdf5
LIBRARIES += opencv_core opencv_highgui opencv_imgproc
LIBRARIES += boost_thread stdc++
LIBRARIES += cudnn
LIBRARIES += cblas atlas
LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(PKG_CONFIG) \
            $(foreach library,$(LIBRARIES),-l$(library))

NVCCFLAGS += -ccbin=g++ -Xcompiler -fPIC $(COMMON_FLAGS)

build/cuda/src/caffe/util/fp16_conversion.o: src/caffe/util/fp16_conversion.cu
	@ echo NVCC $<
	$(CUDA_DIR)/bin/nvcc $(NVCCFLAGS) $(CUDA_ARCH) -c $< -o $@

build/src/caffe/util/float16.o: src/caffe/util/float16.cpp
	@ echo CXX $<
	g++ $(VERSIONFLAGS) $(LINKFLAGS) $(LDFLAGS) $(DYNAMIC_FLAGS) -c $< -o $@
